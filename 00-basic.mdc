---
description: "Cursor – Basic Rules - v1.11 - 2025-06-10"
globs: 
alwaysApply: true
---

# Pilares conceituais do colegiado

| Pilar | Obras / Contribuições | Especialidades |
|-------|----------------------|----------------|
| **Gregor Hohpe** | *Enterprise Integration Patterns*; *The Software Architect Elevator* | Integração empresarial; visão estratégica |
| **Robert C. Martin** | *Clean Code*; *Clean Architecture*; SOLID | SOLID; Clean Code; TDD |
| **Eric Evans** | *Domain-Driven Design* | DDD (tático e estratégico) |
| **Erich Gamma / GoF** | *Design Patterns* | Padrões OO clássicos |
| **Vladimir Khorikov** | *Unit Testing: Principles, Practices, and Patterns* | Testes de unidade; Specification Pattern |
| **Richard Blewett** | *Pro Asynchronous Programming with .NET* | Programação assíncrona; performance |

---

## Diretriz Fundamental

1. **Analisar o problema** – compreender contexto, restrições e objetivos.  
2. **Consultar a documentação** – **antes de qualquer implementação**, verificar as diretrizes na pasta  
   `docs/guidelines/` correspondente ao artefato afetado (`.common` → tipo → artefato).  
3. **Selecionar a melhor alternativa** – guiada pelos pilares acima **e** pelas guidelines vigentes.  
4. **Implementar a solução** –  
   * obrigatório seguir **SOLID**, **Código Limpo**, **DDD** e **Vertical Slice Architecture**;  
   * código deve compilar em **C# 12 / .NET 8** e usar **file-scoped namespace**;  
   * **Value Objects** como `readonly record struct`; **Entidades** com `private set;` e mutação via métodos de negócio.  
5. **Garantir recompilação completa** – recompilar **toda a solução** após qualquer modificação de código.

## Diretrizes de Desenvolvimento

Todas as diretrizes de desenvolvimento estão organizadas na pasta `docs/guidelines/`. Esta estrutura garante que:

1. **Diretrizes Específicas** - Cada tipo de artefato possui suas próprias diretrizes em `docs/guidelines/<tipo>/<artefato>/`
2. **Diretrizes Comuns** - Regras compartilhadas por tipo de artefato em `docs/guidelines/<tipo>/.common/`
3. **Hierarquia de Precedência** - Diretrizes específicas têm precedência sobre as comuns
4. **Documentação Viva** - As diretrizes são mantidas atualizadas e refletem as melhores práticas do projeto

**IMPORTANTE**: Antes de iniciar qualquer implementação, é **OBRIGATÓRIO** consultar e seguir todas as diretrizes aplicáveis na pasta `docs/guidelines/`.

---

## Estrutura de Documentação

Os detalhes completos residem no `docs/README.md`. Resumidamente:

```
docs/
├─ adr/                    # Arquitetural Decision Records
└─ guidelines/             # Diretrizes por tipo de artefato
    ├─ <tipo>/.common/     # Regras comuns por tipo
    └─ <tipo>/<artefato>/  # Regras específicas por artefato

### Política de precedência

1. **Local** (`guidelines/<tipo>/<artefato>/`)  
2. **Comum por tipo** (`guidelines/<tipo>/.common/`)  
3. **Global** (`00-basic.mdc`, ADRs)

Em caso de sobreposição, regras locais prevalecem e devem conter bloco **Override** apontando a regra substituída.

---

## Fluxo de tratamento de erros (`erro:` + call stack)

1. **Analisar** a mensagem e o contexto.  
2. **Explicar a causa** do erro.  
3. **Listar alternativas** de correção possíveis.  
4. **Aplicar correção** apenas após escolha da alternativa ou se instruído a corrigir, retornar:  
   1. **Causa**;  
   2. **Descrição da correção aplicada**.

---

> Estas regras aplicam-se a **todas** as interações no Cursor para este projeto.
