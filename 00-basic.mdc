---
description: "Cursor – Basic Rules - v1.10 - 2025-06-10"
alwaysApply: true
---

# Pilares conceituais do colegiado

| Pilar | Obras / Contribuições | Especialidades |
|-------|----------------------|----------------|
| **Gregor Hohpe** | *Enterprise Integration Patterns*; *The Software Architect Elevator* | Integração empresarial; visão estratégica |
| **Robert C. Martin** | *Clean Code*; *Clean Architecture*; SOLID | SOLID; Clean Code; TDD |
| **Eric Evans** | *Domain-Driven Design* | DDD (tático e estratégico) |
| **Erich Gamma / GoF** | *Design Patterns* | Padrões OO clássicos |
| **Vladimir Khorikov** | *Unit Testing: Principles, Practices, and Patterns* | Testes de unidade; Specification Pattern |
| **Richard Blewett** | *Pro Asynchronous Programming with .NET* | Programação assíncrona; performance |

---

## Diretriz Fundamental

1. **Analisar o problema** – compreender contexto, restrições e objetivos.  
2. **Consultar a documentação** – **antes de qualquer implementação**, verificar as diretrizes na pasta `docs/` correspondente ao artefato afetado.  
3. **Selecionar a melhor alternativa** – guiada pelos pilares acima **e** pelas guidelines vigentes.  
4. **Implementar a solução** –  
   * obrigatório seguir **SOLID**, **Código Limpo**, **DDD** e **Vertical Slice Architecture**;  
   * código deve compilar em **C# 12 / .NET 8** e usar **file-scoped namespace**;  
   * **Value Objects** como `readonly record struct`; **Entidades** com `private set;` e mutação via métodos de negócio.  
5. **Garantir recompilação completa** – recompilar **toda a solução** após qualquer modificação de código.

---

## Estrutura de Documentação (`docs/`)

```text
docs/
├─ README.md
├─ adr/
│  └─ 0001-first-decision.md
├─ dotnet/
│  ├─ .common/                # guidelines globais para todos os artefatos .NET
│  │  ├─ coding-standards.md
│  │  └─ dependencies.md
│  ├─ api-billing/
│  │  ├─ api-guidelines.md
│  │  └─ testing-guidelines.md
│  └─ windows-client/
│     └─ winforms-guidelines.md
├─ angular/
│  ├─ .common/
│  │  └─ spa-standards.md
│  └─ my-spa/
│     └─ spa-guidelines.md
├─ infra/
│  ├─ .common/
│  │  └─ infra-standards.md
│  ├─ docker/
│  │  └─ docker-guidelines.md
│  └─ cicd/
│     └─ cicd-guidelines.md
└─ domain/
   ├─ .common/
   │  └─ domain-principles.md
   └─ requisitos-funcionais.md
```

### Convenções e política de precedência

| Nível | Pasta | Precedência |
|-------|-------|-------------|
| **Local (mais forte)** | `docs/<tipo>/<artefato>/` | Regra específica para um artefato. |
| **Comum por tipo** | `docs/<tipo>/.common/` | Aplica‑se a todos os artefatos daquele tipo, **exceto** onde um arquivo local declara override explícito. |
| **Global** | `docs/adr/` e demais pastas fora de tipo | Contexto amplo; aplica onde não houver regulamento mais específico. |

*Se um guideline local divergir de `.common`, ele deve*:

```markdown
> **Override**: substitui a regra _X_ definida em `../.common/coding-standards.md`
```

### Front‑matter padrão

```yaml
---
title: "API Guidelines – Billing"
version: 1.5
scope: local            # local | common | global
order: 30               # navegação (opcional)
owner: Billing Team
lastReviewed: 2025-06-10
---
```

* `scope` indica a camada de precedência.  
* Automação CI verifica que não existam dois arquivos `scope: local` e `scope: common` com o mesmo `slug` na mesma árvore sem declaração de *Override*.

---

### Integração CI / Automação

* **Validação de PR**
  * Detecta alterações em `.common/` → requer aprovação dos owners de **todos** artefatos afetados.
  * Detecta divergência não documentada (falta de bloco **Override**).
* **Nightly job** alerta `owner` quando `lastReviewed` > 90 dias.
* **Link linter** verifica links internos e âncoras.

---

## Fluxo de tratamento de erros (`erro:` + call stack)

1. **Analisar** a mensagem e o contexto.  
2. **Explicar a causa** do erro.  
3. **Listar alternativas** de correção possíveis.  
4. **Aplicar correção** apenas após escolha da alternativa ou se instruído a corrigir, retornar:  
   1. **Causa**;  
   2. **Descrição da correção aplicada**.

---

> Estas regras aplicam-se a **todas** as interações no Cursor para este projeto.
